/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include "SkillCraft_Includes/SkillCraft_Interface"

#pragma semicolon 1

new Handle:FHOn_SC_DodgePre;
new Handle:FHOn_SC_DodgePost;

new dummyresult;

public Plugin:myinfo = 
{
	name = "SkillCraft WCX - Dodge Engine",
	author = "SkillCraft Team",
	description = "WCX - Dodge Engine",
	version = "0.1",
}

public OnPluginStart()
{
}
public bool:Init_SC_NativesForwards()
{
	FHOn_SC_DodgePre=CreateGlobalForward("On_SC_DodgePre",ET_Hook,Param_Cell,Param_Cell,Param_Float);
	FHOn_SC_DodgePost=CreateGlobalForward("On_SC_DodgePost",ET_Hook,Param_Cell,Param_Cell);
	return true;
}
public On_SC_TakeDmgBulletPre(victim,attacker,Float:damage)
{
	if (ValidPlayer(victim))
	{
		new inflictor=SC_GetDamageInflictor();
		new Float:EvadeChance = 0.0;
		// CHECK DAMAGE FROM MELEE (DODGE MELEE)
		if(IS_PLAYER(victim)&&IS_PLAYER(attacker)&&victim>0&&attacker>0&&attacker!=victim)
		{
			if (attacker == inflictor || !IsValidEntity(inflictor))
			{
				new String:weapon[64];
				GetClientWeapon(attacker, weapon, sizeof(weapon));
				EvadeChance += SC_GetBuffSumFloat(victim,fDodgeChance);
				if(EvadeChance>0.0 && SC_IsDamageFromMelee(weapon))
				{
					new vteam=GetClientTeam(victim);
					new ateam=GetClientTeam(attacker);
					if(vteam!=ateam)
					{
						new Float:chance = GetRandomFloat(0.0,1.0);
					
						Call_StartForward(FHOn_SC_DodgePre);
						Call_PushCell(victim);
						Call_PushCell(attacker);
						Call_PushFloat(chance);
						Call_Finish(dummyresult);
					
						//if(!Hexed(victim,false) && chance<=EvadeChance && !SC_HasImmunity(attacker,Immunity_Skills))
						// Gems are not skills ... they are something new
						if(chance<=EvadeChance)
						{
							SC_FlashScreen(victim,RGBA_COLOR_BLUE);
						
						
							SC_DamageModPercent(0.0);
							//DP("MELEE DODGED!");
						
							SC_MsgEvaded(victim,attacker);
						
							Call_StartForward(FHOn_SC_DodgePost);
							Call_PushCell(victim);
							Call_PushCell(attacker);
							Call_Finish(dummyresult);
						
							decl Float:pos[3];
							GetClientEyePosition(victim, pos);
							pos[2] += 4.0;
							SC_TF_ParticleToClient(0, "miss_text", pos); //to the attacker at the enemy pos
						}
					}
				}
			}
		}
		
		EvadeChance=0.0;
		// CHECK DAMAGE FROM RANGED (DODGE RANGED)
		if(IS_PLAYER(victim)&&IS_PLAYER(attacker)&&victim>0&&attacker>0&&attacker!=victim)
		{
			if (attacker == inflictor || !IsValidEntity(inflictor))
			{
				new String:weapon[64];
				GetClientWeapon(attacker, weapon, sizeof(weapon));
				EvadeChance += SC_GetBuffSumFloat(victim,fDodgeChanceRanged);
				if(EvadeChance>0.0 && !SC_IsDamageFromMelee(weapon))
				{
					new vteam=GetClientTeam(victim);
					new ateam=GetClientTeam(attacker);
					if(vteam!=ateam)
					{
						new Float:chance = GetRandomFloat(0.0,1.0);
					
						Call_StartForward(FHOn_SC_DodgePre);
						Call_PushCell(victim);
						Call_PushCell(attacker);
						Call_PushFloat(chance);
						Call_Finish(dummyresult);
					
						//if(!Hexed(victim,false) && chance<=EvadeChance && !SC_HasImmunity(attacker,Immunity_Skills))
						// Gems are not skills ... they are something new
						if(chance<=EvadeChance)
						{
							SC_FlashScreen(victim,RGBA_COLOR_BLUE);
						
						
							SC_DamageModPercent(0.0);
							//DP("RANGE DODGED!");
						
							SC_MsgEvaded(victim,attacker);
						
							Call_StartForward(FHOn_SC_DodgePost);
							Call_PushCell(victim);
							Call_PushCell(attacker);
							Call_Finish(dummyresult);
						
							decl Float:pos[3];
							GetClientEyePosition(victim, pos);
							pos[2] += 4.0;
							SC_TF_ParticleToClient(0, "miss_text", pos); //to the attacker at the enemy pos
						}
					}
				}
			}
		}
	}
}



